name: Unit Tests
#  Prueba
run-name: ${{ github.actor }} is execute test coverage üòé
on:
  pull_request:
    branches:
      - "master"
    types: [opened, reopened, synchronize]

# Esto es un comentario
# Test feature
# permissions: write-all
permissions:
  checks: write
  pull-requests: write

jobs:
  tests:
    if: startsWith(github.head_ref, 'feature')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      # - name: Run Tests
      #   run: yarn test
      # - name: Test and Generate Coverage
      #   run: yarn test:coverage
      # - run: npm run lint
      - name: Do you have a unit test?
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const number = await context.payload.pull_request.number
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: number
            })

            const isShow = files.data.some(file => file.filename.includes('.test.ts') || file.filename.includes('.test.js'))

            if(!isShow){
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                status: 'completed',
                name: 'Failed Validation',
                head_sha: context.payload.pull_request.head.sha || context.sha,
                conclusion: 'failure',
                output: {
                  title: 'Failed Validation',
                  text: 'Fallo porque no cumplio con las validaci√≥n minima',
                  summary: 'Debe contener al menos una prueba'
                }
              })
              
              core.setFailed('Debe contener al menos una prueba')
            }

            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              status: 'completed',
              name: 'Successful Validation',
              head_sha: context.payload.pull_request.head.sha || context.sha,
              conclusion: 'success',
              output: {
                title: 'Successful Validation',
                text: 'Contiene al menos una prueba unitaria',
                summary: 'Debe contener al menos una prueba'
              }
            }) 
      - name: Coverage Report
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          test-script: yarn test
          annotations: failed-tests
